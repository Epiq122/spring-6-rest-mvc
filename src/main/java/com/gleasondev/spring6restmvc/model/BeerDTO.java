package com.gleasondev.spring6restmvc.model;import jakarta.validation.constraints.NotBlank;import jakarta.validation.constraints.NotNull;import java.math.BigDecimal;import java.time.LocalDateTime;import java.util.UUID;public class BeerDTO {    private UUID id;    private Integer version;    @NotBlank    @NotNull    private String beerName;    @NotNull    private BeerStyle beerStyle;    @NotNull    @NotBlank    private String upc;    private Integer quantityOnHand;    @NotNull    private BigDecimal price;    private LocalDateTime createdDate;    private LocalDateTime updateDate;    BeerDTO(UUID id, Integer version, @NotBlank @NotNull String beerName, @NotNull BeerStyle beerStyle, @NotNull @NotBlank String upc, Integer quantityOnHand, @NotNull BigDecimal price, LocalDateTime createdDate, LocalDateTime updateDate) {        this.id = id;        this.version = version;        this.beerName = beerName;        this.beerStyle = beerStyle;        this.upc = upc;        this.quantityOnHand = quantityOnHand;        this.price = price;        this.createdDate = createdDate;        this.updateDate = updateDate;    }    public static BeerDTOBuilder builder() {        return new BeerDTOBuilder();    }    public UUID getId() {        return this.id;    }    public void setId(UUID id) {        this.id = id;    }    public Integer getVersion() {        return this.version;    }    public void setVersion(Integer version) {        this.version = version;    }    public @NotBlank @NotNull String getBeerName() {        return this.beerName;    }    public void setBeerName(@NotBlank @NotNull String beerName) {        this.beerName = beerName;    }    public @NotNull BeerStyle getBeerStyle() {        return this.beerStyle;    }    public void setBeerStyle(@NotNull BeerStyle beerStyle) {        this.beerStyle = beerStyle;    }    public @NotNull @NotBlank String getUpc() {        return this.upc;    }    public void setUpc(@NotNull @NotBlank String upc) {        this.upc = upc;    }    public Integer getQuantityOnHand() {        return this.quantityOnHand;    }    public void setQuantityOnHand(Integer quantityOnHand) {        this.quantityOnHand = quantityOnHand;    }    public @NotNull BigDecimal getPrice() {        return this.price;    }    public void setPrice(@NotNull BigDecimal price) {        this.price = price;    }    public LocalDateTime getCreatedDate() {        return this.createdDate;    }    public void setCreatedDate(LocalDateTime createdDate) {        this.createdDate = createdDate;    }    public LocalDateTime getUpdateDate() {        return this.updateDate;    }    public void setUpdateDate(LocalDateTime updateDate) {        this.updateDate = updateDate;    }    public boolean equals(final Object o) {        if (o == this) return true;        if (!(o instanceof BeerDTO)) return false;        final BeerDTO other = (BeerDTO) o;        if (!other.canEqual((Object) this)) return false;        final Object this$id = this.getId();        final Object other$id = other.getId();        if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;        final Object this$version = this.getVersion();        final Object other$version = other.getVersion();        if (this$version == null ? other$version != null : !this$version.equals(other$version)) return false;        final Object this$beerName = this.getBeerName();        final Object other$beerName = other.getBeerName();        if (this$beerName == null ? other$beerName != null : !this$beerName.equals(other$beerName)) return false;        final Object this$beerStyle = this.getBeerStyle();        final Object other$beerStyle = other.getBeerStyle();        if (this$beerStyle == null ? other$beerStyle != null : !this$beerStyle.equals(other$beerStyle)) return false;        final Object this$upc = this.getUpc();        final Object other$upc = other.getUpc();        if (this$upc == null ? other$upc != null : !this$upc.equals(other$upc)) return false;        final Object this$quantityOnHand = this.getQuantityOnHand();        final Object other$quantityOnHand = other.getQuantityOnHand();        if (this$quantityOnHand == null ? other$quantityOnHand != null : !this$quantityOnHand.equals(other$quantityOnHand))            return false;        final Object this$price = this.getPrice();        final Object other$price = other.getPrice();        if (this$price == null ? other$price != null : !this$price.equals(other$price)) return false;        final Object this$createdDate = this.getCreatedDate();        final Object other$createdDate = other.getCreatedDate();        if (this$createdDate == null ? other$createdDate != null : !this$createdDate.equals(other$createdDate)) return false;        final Object this$updateDate = this.getUpdateDate();        final Object other$updateDate = other.getUpdateDate();        if (this$updateDate == null ? other$updateDate != null : !this$updateDate.equals(other$updateDate)) return false;        return true;    }    protected boolean canEqual(final Object other) {        return other instanceof BeerDTO;    }    public int hashCode() {        final int PRIME = 59;        int result = 1;        final Object $id = this.getId();        result = result * PRIME + ($id == null ? 43 : $id.hashCode());        final Object $version = this.getVersion();        result = result * PRIME + ($version == null ? 43 : $version.hashCode());        final Object $beerName = this.getBeerName();        result = result * PRIME + ($beerName == null ? 43 : $beerName.hashCode());        final Object $beerStyle = this.getBeerStyle();        result = result * PRIME + ($beerStyle == null ? 43 : $beerStyle.hashCode());        final Object $upc = this.getUpc();        result = result * PRIME + ($upc == null ? 43 : $upc.hashCode());        final Object $quantityOnHand = this.getQuantityOnHand();        result = result * PRIME + ($quantityOnHand == null ? 43 : $quantityOnHand.hashCode());        final Object $price = this.getPrice();        result = result * PRIME + ($price == null ? 43 : $price.hashCode());        final Object $createdDate = this.getCreatedDate();        result = result * PRIME + ($createdDate == null ? 43 : $createdDate.hashCode());        final Object $updateDate = this.getUpdateDate();        result = result * PRIME + ($updateDate == null ? 43 : $updateDate.hashCode());        return result;    }    public String toString() {        return "BeerDTO(id=" + this.getId() + ", version=" + this.getVersion() + ", beerName=" + this.getBeerName() + ", beerStyle=" + this.getBeerStyle() + ", upc=" + this.getUpc() + ", quantityOnHand=" + this.getQuantityOnHand() + ", price=" + this.getPrice() + ", createdDate=" + this.getCreatedDate() + ", updateDate=" + this.getUpdateDate() + ")";    }    public static class BeerDTOBuilder {        private UUID id;        private Integer version;        private @NotBlank @NotNull String beerName;        private @NotNull BeerStyle beerStyle;        private @NotNull @NotBlank String upc;        private Integer quantityOnHand;        private @NotNull BigDecimal price;        private LocalDateTime createdDate;        private LocalDateTime updateDate;        BeerDTOBuilder() {        }        public BeerDTOBuilder id(UUID id) {            this.id = id;            return this;        }        public BeerDTOBuilder version(Integer version) {            this.version = version;            return this;        }        public BeerDTOBuilder beerName(@NotBlank @NotNull String beerName) {            this.beerName = beerName;            return this;        }        public BeerDTOBuilder beerStyle(@NotNull BeerStyle beerStyle) {            this.beerStyle = beerStyle;            return this;        }        public BeerDTOBuilder upc(@NotNull @NotBlank String upc) {            this.upc = upc;            return this;        }        public BeerDTOBuilder quantityOnHand(Integer quantityOnHand) {            this.quantityOnHand = quantityOnHand;            return this;        }        public BeerDTOBuilder price(@NotNull BigDecimal price) {            this.price = price;            return this;        }        public BeerDTOBuilder createdDate(LocalDateTime createdDate) {            this.createdDate = createdDate;            return this;        }        public BeerDTOBuilder updateDate(LocalDateTime updateDate) {            this.updateDate = updateDate;            return this;        }        public BeerDTO build() {            return new BeerDTO(id, version, beerName, beerStyle, upc, quantityOnHand, price, createdDate, updateDate);        }        public String toString() {            return "BeerDTO.BeerDTOBuilder(id=" + this.id + ", version=" + this.version + ", beerName=" + this.beerName + ", beerStyle=" + this.beerStyle + ", upc=" + this.upc + ", quantityOnHand=" + this.quantityOnHand + ", price=" + this.price + ", createdDate=" + this.createdDate + ", updateDate=" + this.updateDate + ")";        }    }}